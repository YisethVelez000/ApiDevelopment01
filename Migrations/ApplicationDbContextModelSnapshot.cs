// <auto-generated />
using System;
using ApiDevelopment.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiDevelopment.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiDevelopment.Models.CatalogoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<int?>("IdFichaTecnicaId")
                        .HasColumnType("int");

                    b.Property<string>("ImagenProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("TamanoEstampado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCatalogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoEstampado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFichaTecnicaId");

                    b.ToTable("catalogoProductos");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<double>("IVA")
                        .HasColumnType("float");

                    b.Property<string>("NombreInsumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recibo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Total")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idProveedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idProveedorId");

                    b.ToTable("compras");
                });

            modelBuilder.Entity("ApiDevelopment.Models.ComprasInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("FechaCompra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("IVA")
                        .HasColumnType("float");

                    b.Property<int?>("IdCompraId")
                        .HasColumnType("int");

                    b.Property<int?>("IdInsumoId")
                        .HasColumnType("int");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCompraId");

                    b.HasIndex("IdInsumoId");

                    b.ToTable("ComprasInsumos");
                });

            modelBuilder.Entity("ApiDevelopment.Models.DetalleOrdenProduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdOrdenProduccionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOrdenProduccionId");

                    b.ToTable("detalleOrdenProduccion");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoEmpleado")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaFinalizacion")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIngreso")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<int?>("IdRolId")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdRolId");

                    b.HasIndex("IdUsuarioId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Estampado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionEstampado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoEstampado")
                        .HasColumnType("int");

                    b.Property<string>("NombreEstampado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estampados");
                });

            modelBuilder.Entity("ApiDevelopment.Models.EstampadoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdCatalogoProductoId")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idEstampadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCatalogoProductoId");

                    b.HasIndex("idEstampadoId");

                    b.ToTable("EstampadoProductos");
                });

            modelBuilder.Entity("ApiDevelopment.Models.FichaTecnica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoFicha")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreFichaTecnica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Talla")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FichasTecnicas");
                });

            modelBuilder.Entity("ApiDevelopment.Models.FichaTecnicaInsumos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<int?>("IdFichaTecnicaId")
                        .HasColumnType("int");

                    b.Property<int?>("IdInsumosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdFichaTecnicaId");

                    b.HasIndex("IdInsumosId");

                    b.ToTable("FichaTecnicaInsumos");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Insumos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidadinsumo")
                        .HasColumnType("int");

                    b.Property<int>("EstadoInsumo")
                        .HasColumnType("int");

                    b.Property<int>("IVA")
                        .HasColumnType("int");

                    b.Property<string>("NombreInsumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("StockInsumo")
                        .HasColumnType("int");

                    b.Property<string>("UnidadMedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("ApiDevelopment.Models.OrdenProduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("FechaEstimada")
                        .HasColumnType("date");

                    b.Property<int>("NumeroOrdenProduccion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ordenProduccions");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DireccionEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoPedido")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaEntrega")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaPedido")
                        .HasColumnType("date");

                    b.Property<string>("FormaPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdClienteId")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<double>("TotalPedido")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("ApiDevelopment.Models.ProductoTerminado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DetalleOrdenProduccionId")
                        .HasColumnType("int");

                    b.Property<int?>("EstampadoId")
                        .HasColumnType("int");

                    b.Property<int?>("IdFichaTecnicaId")
                        .HasColumnType("int");

                    b.Property<int?>("tipoEstampadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DetalleOrdenProduccionId");

                    b.HasIndex("EstampadoId");

                    b.HasIndex("IdFichaTecnicaId");

                    b.HasIndex("tipoEstampadoId");

                    b.ToTable("ProductoTerminado");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Proveedores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoProveedor")
                        .HasColumnType("int");

                    b.Property<string>("NombreContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProveedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("proveedores");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estadoRol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idRolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idRolId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EstadoVenta")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaVenta")
                        .HasColumnType("date");

                    b.Property<int?>("IdClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("IdPedidoId")
                        .HasColumnType("int");

                    b.Property<double>("TotalVenta")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdClienteId");

                    b.HasIndex("IdPedidoId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ApiDevelopment.Models.CatalogoProducto", b =>
                {
                    b.HasOne("ApiDevelopment.Models.FichaTecnica", "IdFichaTecnica")
                        .WithMany()
                        .HasForeignKey("IdFichaTecnicaId");

                    b.Navigation("IdFichaTecnica");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Cliente", b =>
                {
                    b.HasOne("ApiDevelopment.Models.Usuario", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("IdUsuarioId");

                    b.Navigation("IdUsuario");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Compra", b =>
                {
                    b.HasOne("ApiDevelopment.Models.Proveedores", "idProveedor")
                        .WithMany()
                        .HasForeignKey("idProveedorId");

                    b.Navigation("idProveedor");
                });

            modelBuilder.Entity("ApiDevelopment.Models.ComprasInsumo", b =>
                {
                    b.HasOne("ApiDevelopment.Models.Compra", "IdCompra")
                        .WithMany()
                        .HasForeignKey("IdCompraId");

                    b.HasOne("ApiDevelopment.Models.Insumos", "IdInsumo")
                        .WithMany()
                        .HasForeignKey("IdInsumoId");

                    b.Navigation("IdCompra");

                    b.Navigation("IdInsumo");
                });

            modelBuilder.Entity("ApiDevelopment.Models.DetalleOrdenProduccion", b =>
                {
                    b.HasOne("ApiDevelopment.Models.OrdenProduccion", "IdOrdenProduccion")
                        .WithMany()
                        .HasForeignKey("IdOrdenProduccionId");

                    b.Navigation("IdOrdenProduccion");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Empleado", b =>
                {
                    b.HasOne("ApiDevelopment.Models.Rol", "IdRol")
                        .WithMany()
                        .HasForeignKey("IdRolId");

                    b.HasOne("ApiDevelopment.Models.Usuario", "IdUsuario")
                        .WithMany()
                        .HasForeignKey("IdUsuarioId");

                    b.Navigation("IdRol");

                    b.Navigation("IdUsuario");
                });

            modelBuilder.Entity("ApiDevelopment.Models.EstampadoProducto", b =>
                {
                    b.HasOne("ApiDevelopment.Models.CatalogoProducto", "IdCatalogoProducto")
                        .WithMany()
                        .HasForeignKey("IdCatalogoProductoId");

                    b.HasOne("ApiDevelopment.Models.Estampado", "idEstampado")
                        .WithMany()
                        .HasForeignKey("idEstampadoId");

                    b.Navigation("IdCatalogoProducto");

                    b.Navigation("idEstampado");
                });

            modelBuilder.Entity("ApiDevelopment.Models.FichaTecnicaInsumos", b =>
                {
                    b.HasOne("ApiDevelopment.Models.FichaTecnica", "IdFichaTecnica")
                        .WithMany()
                        .HasForeignKey("IdFichaTecnicaId");

                    b.HasOne("ApiDevelopment.Models.Insumos", "IdInsumos")
                        .WithMany()
                        .HasForeignKey("IdInsumosId");

                    b.Navigation("IdFichaTecnica");

                    b.Navigation("IdInsumos");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Pedido", b =>
                {
                    b.HasOne("ApiDevelopment.Models.Cliente", "IdCliente")
                        .WithMany()
                        .HasForeignKey("IdClienteId");

                    b.Navigation("IdCliente");
                });

            modelBuilder.Entity("ApiDevelopment.Models.ProductoTerminado", b =>
                {
                    b.HasOne("ApiDevelopment.Models.DetalleOrdenProduccion", null)
                        .WithMany("ProductoTerminado")
                        .HasForeignKey("DetalleOrdenProduccionId");

                    b.HasOne("ApiDevelopment.Models.Estampado", "Estampado")
                        .WithMany()
                        .HasForeignKey("EstampadoId");

                    b.HasOne("ApiDevelopment.Models.FichaTecnica", "IdFichaTecnica")
                        .WithMany()
                        .HasForeignKey("IdFichaTecnicaId");

                    b.HasOne("ApiDevelopment.Models.Estampado", "tipoEstampado")
                        .WithMany()
                        .HasForeignKey("tipoEstampadoId");

                    b.Navigation("Estampado");

                    b.Navigation("IdFichaTecnica");

                    b.Navigation("tipoEstampado");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Usuario", b =>
                {
                    b.HasOne("ApiDevelopment.Models.Rol", "idRol")
                        .WithMany()
                        .HasForeignKey("idRolId");

                    b.Navigation("idRol");
                });

            modelBuilder.Entity("ApiDevelopment.Models.Venta", b =>
                {
                    b.HasOne("ApiDevelopment.Models.Cliente", "IdCliente")
                        .WithMany()
                        .HasForeignKey("IdClienteId");

                    b.HasOne("ApiDevelopment.Models.Pedido", "IdPedido")
                        .WithMany()
                        .HasForeignKey("IdPedidoId");

                    b.Navigation("IdCliente");

                    b.Navigation("IdPedido");
                });

            modelBuilder.Entity("ApiDevelopment.Models.DetalleOrdenProduccion", b =>
                {
                    b.Navigation("ProductoTerminado");
                });
#pragma warning restore 612, 618
        }
    }
}
